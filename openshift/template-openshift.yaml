apiVersion: v1
kind: Template
metadata:
  name: template-aia-s2i
  annotations:
    description: Template for the deployment and construction of the AIA application using the s2i strategy
    iconClass: icon-nodejs
    tags: nodejs, AI
message:

labels:
  app: aia-eia

parameters:
# Parameters
  - name: APP_NAME
    description: Application name
    value: aia-eia
    required: true
  - name: GIT_CODE
    description: Application code repository
    required: true
  - name: GIT_BRANCH
    description: Application code repository branch
    value: master
    required: true

objects:
###############################################################################
# Imagestream Objects
###############################################################################
# Imagestream for builder image
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APP_NAME}-base
  spec:
    dockerImageRepository: ""

# Imagestream para la imagen resultante del s2i (builder image) + (codigo desde el git)
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APP_NAME}-app
  spec:
    dockerImageRepository: ""


###############################################################################
# Buildconfig Objects
##############################################################################
# Building the base image (builder image) for use in the s2i
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      "template.alpha.openshift.io/wait-for-ready": "true"
    name: ${APP_NAME}-base
  spec:
    resources:
      limits:
        memory: 500Mi
        cpu: 500m
    source:
      type: Git
      git:
        uri: ${GIT_CODE}
        ref: ${GIT_BRANCH}
      contextDir: openshift/s2i
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
    type: Docker
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}-base:latest

# Building app image
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      "template.alpha.openshift.io/wait-for-ready": "true"
    name: ${APP_NAME}-app
  spec:
    resources:
      limits:
        memory: 500Mi
        cpu: 500m
    source:
      type: Git
      git:
        uri: ${GIT_CODE}
        ref: ${GIT_BRANCH}
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}-base:latest
    type: Source
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}-app:latest

###################################################################
# DeploymentConfig Objects
####################################################################
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      "template.alpha.openshift.io/wait-for-ready": "true"
    name: ${APP_NAME}-app
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}-app
      deploymentconfig: ${APP_NAME}-app
    strategy:
      type: Rolling
      resources:
        limits:
          memory: 500Mi
          cpu: 500m
    template:
      spec:
        containers:
        - image: ${APP_NAME}-app
          name: ${APP_NAME}-app
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              memory: 750Mi
              cpu: 750m
        restartPolicy: Always
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}-app
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}-app:latest
      type: ImageChange

############################################################################################
# Services Objects
############################################################################################
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP_NAME}-app
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_NAME}-app
      deploymentconfig: ${APP_NAME}-app
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}